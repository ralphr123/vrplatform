generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  videos        Video[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum VideoType {
  REGULAR
  VR
}

model Video {
  id                 String    @id @default(cuid())
  userId             String
  name               String
  blobUrl            String    @map(name: "url")
  hlsUrl             String
  dashUrl            String
  smoothStreamingUrl String
  thumbnailUrl       String
  type               VideoType
  views              Int       @default(0)
  likes              Int       @default(0)
  duration_seconds   Int
  upload_date        DateTime  @default(now())
  verified_date      DateTime?
  user               User      @relation(fields: [userId], references: [id])
}
